def find_union(arr1, arr2):
    freq = {}                                         # Dictionary that will store each unique number from both arrays as a key
    union = []                                        # List that will store the final result 
   
    for num in arr1:                                  # Loop through each number in arr1
        freq[num] = freq.get(num, 0) + 1              # freq.get(num, 0) tries to get the current count of num in the dictionary. If num isn't there, it defaults to 0. Then it adds 1 and updates the dictionary

    for num in arr2:                                  # In the same way goes through arr2
        freq[num] = freq.get(num, 0) + 1              # If an element was already present, its count increases. If not, itâ€™s added for the first time.
    
    for num in freq:                                  # Loop through the keys of the freq dictionary
        union.append(num)                             # Each key is a unique element from either arr1 or arr2. Add each to the union list. 
    return union

arr1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]               # Time Complexity: O(n + m)
arr2 = [2, 3, 4, 4, 5, 11, 12]
union = find_union(arr1, arr2)
print("Union of arr1 and arr2 is:")
for num in union:
    print(num, end=" ")
